{"title":"Software Project Management in Practice","uid":4747263,"size":1230756,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:29926df87529061481ffe92e446122682d32bb04&amp;dn=Software+Project+Management+in+Practice&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":2,"leechers":2,"uploader":"VasiaZozulia","files":1,"time":1235946157,"description":"Aimed at developers and IT managers alike, Software Project Management in Practice offers an invaluable guide to using lightweight software processes in real projects. Filled with sample documents, this book can benefit any organization seeking to improve the ways it manages software. \n\nIn an era of ever tighter schedules, implementing a serious software process becomes even more difficult. This book ventures a simple argument: that the techniques for software process management used by InfoSys (a company with a &quot;mature&quot; software process) can be applied to other organizations. Packed with sample documents drawn from real projects, this book is also notable for its clear presentation and the absence of the theoretical and jargon-laden prose that can be found in many software engineering texts. \nThe author first looks at how to assess a company's software process using the Capability Maturity Model (CMM) and other schemes. Surprisingly, the tools at InfoSys (which earn high CMM marks) are not fancy case tools, but databases, spreadsheets, and Microsoft Project files. Its software process database, for example, allows new projects to reuse existing documents and expertise. After an overview of the modified waterfall model software process used at InfoSys, the author looks at techniques for estimating the size and scope of projects. Then it's on to quality planning. A consistent theme here is that metrics and statistical process control (SPC) should be used to track defects. The book then covers risk assessment and the structure of teams. A standout section on configuration management outlines the role for preserving builds and project documents at each stage of the game. \nLater sections examine the actual implementation and deployment of software. The author's argument for peer review of code is a strong one. He details strategies for running design and code reviews (if even by a single person) to catch defects and improper designs, as well as tips for overcoming resistance to such practices. \nSample defect tracking and status for projects also gets its due. Sample documents (using spreadsheets and even the layout of disk directories) to store project information show that a simple approach can yield productive results. The author then shows how to analyze the patterns of defects in software, including how to use statistical techniques to spot out-of-control projects. The book closes with the ways in which a project postmortem (or &quot;project closure analysis&quot;) can be used to spot what went wrong and to improve things the next time around. \nFor both those new to software process or for those who want to see some practical ideas for successful process in a fast-paced world, this concisely packaged title fills a valuable niche with its mix of current thinking on software process and excellent real-world examples. --Richard Dragan \n","torrent":{"xt":"urn:btih:29926df87529061481ffe92e446122682d32bb04","amp;dn":"Software+Project+Management+in+Practice","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"29926df87529061481ffe92e446122682d32bb04","infoHashBuffer":{"type":"Buffer","data":[41,146,109,248,117,41,6,20,129,255,233,46,68,97,34,104,45,50,187,4]},"announce":[],"urlList":[]}}